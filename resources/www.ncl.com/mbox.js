var mboxCopyright = "Copyright 1996-2014. Adobe Systems Incorporated. All rights reserved.";var TNT = TNT || {};TNT.a = TNT.a || {};TNT.a.nestedMboxes = [];TNT.getGlobalMboxName = function () { return "target-global-mbox";};TNT.getGlobalMboxLocation = function () { return "";};TNT.isAutoCreateGlobalMbox = function () { return true;};TNT.a.b = function () { var c = {}.toString; var d = window.targetPageParams; var e = ""; var f = []; if (typeof(d) != 'undefined' && c.call(d) === '[object Function]') { try { e = d(); } catch (g) { } if (e.length > 0) { f = e.split("&"); for (var i = 0; i < f.length; i++) { f[i] = decodeURIComponent(f[i]); } } } return f;};mboxUrlBuilder = function(h, i) { this.h = h; this.i = i; this.j = new Array(); this.k = function(l) { return l; }; this.m = null;};mboxUrlBuilder.prototype.addNewParameter = function (n, o) { this.j.push({name: n, value: o}); return this;};mboxUrlBuilder.prototype.addParameterIfAbsent = function (n, o) { if (o) { for (var p = 0; p < this.j.length; p++) { var q = this.j[p]; if (q.name === n) { return this; } } this.checkInvalidCharacters(n); return this.addNewParameter(n, o); }};mboxUrlBuilder.prototype.addParameter = function(n, o) { this.checkInvalidCharacters(n); for (var p = 0; p < this.j.length; p++) { var q = this.j[p]; if (q.name === n) { q.value = o; return this; } } return this.addNewParameter(n, o);};mboxUrlBuilder.prototype.addParameters = function(j) { if (!j) { return this; } for (var p = 0; p < j.length; p++) { var r = j[p].indexOf('='); if (r == -1 || r == 0) { continue; } this.addParameter(j[p].substring(0, r), j[p].substring(r + 1, j[p].length)); } return this;};mboxUrlBuilder.prototype.setServerType = function(s) { this.t = s;};mboxUrlBuilder.prototype.setBasePath = function(m) { this.m = m;};mboxUrlBuilder.prototype.setUrlProcessAction = function(u) { this.k = u;};mboxUrlBuilder.prototype.buildUrl = function() { var v = this.m ? this.m : '/m2/' + this.i + '/mbox/' + this.t; var w = document.location.protocol == 'file:' ? 'http:' : document.location.protocol; var l = w + "//" + this.h + v; var x = l.indexOf('?') != -1 ? '&' : '?'; for (var p = 0; p < this.j.length; p++) { var q = this.j[p]; l += x + encodeURIComponent(q.name) + '=' + encodeURIComponent(q.value); x = '&'; } return this.y(this.k(l));};mboxUrlBuilder.prototype.getParameters = function() { return this.j;};mboxUrlBuilder.prototype.setParameters = function(j) { this.j = j;};mboxUrlBuilder.prototype.clone = function() { var z = new mboxUrlBuilder(this.h, this.i); z.setServerType(this.t); z.setBasePath(this.m); z.setUrlProcessAction(this.k); for (var p = 0; p < this.j.length; p++) { z.addParameter(this.j[p].name, this.j[p].value); } return z;};mboxUrlBuilder.prototype.y = function(A) { return A.replace(/\"/g, '&quot;').replace(/>/g, '&gt;');}; mboxUrlBuilder.prototype.checkInvalidCharacters = function (n) { var B = new RegExp('(\'|")'); if (B.exec(n)) { throw "Parameter '" + n + "' contains invalid characters"; } };mboxStandardFetcher = function() { };mboxStandardFetcher.prototype.getType = function() { return 'standard';};mboxStandardFetcher.prototype.fetch = function(C) { C.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + C.buildUrl() + '" language="JavaScript"><' + '\/scr' + 'ipt>');};mboxStandardFetcher.prototype.cancel = function() { };mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype.getType = function() { return 'ajax';};mboxAjaxFetcher.prototype.fetch = function(C) { C.setServerType(this.getType()); var l = C.buildUrl(); this.D = document.createElement('script'); this.D.src = l; document.body.appendChild(this.D);};mboxAjaxFetcher.prototype.cancel = function() { };mboxMap = function() { this.E = new Object(); this.F = new Array();};mboxMap.prototype.put = function(G, o) { if (!this.E[G]) { this.F[this.F.length] = G; } this.E[G] = o;};mboxMap.prototype.get = function(G) { return this.E[G];};mboxMap.prototype.remove = function(G) { this.E[G] = undefined; var H = []; for (var i = 0; i < this.F.length; i++) { if (this.F[i] !== G) { H.push(this.F[i]) } } this.F = H;};mboxMap.prototype.each = function(u) { for (var p = 0; p < this.F.length; p++ ) { var G = this.F[p]; var o = this.E[G]; if (o) { var I = u(G, o); if (I === false) { break; } } }};mboxMap.prototype.isEmpty = function() { return this.F.length === 0;};mboxFactory = function(J, i, K) { this.L = false; this.J = J; this.K = K; this.M = new mboxList(); mboxFactories.put(K, this); this.N = typeof document.createElement('div').replaceChild != 'undefined' && (function() { return true; })() && typeof document.getElementById != 'undefined' && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined' && typeof encodeURIComponent != 'undefined'; this.O = this.N && mboxGetPageParameter('mboxDisable') == null; var P = K == 'default'; this.Q = new mboxCookieManager( 'mbox' + (P ? '' : ('-' + K)), (function() { return mboxCookiePageDomain(); })()); this.O = this.O && this.Q.isEnabled() && (this.Q.getCookie('disable') == null); if (this.isAdmin()) { this.enable(); } this.R(); this.S = mboxGenerateId(); this.T = mboxScreenHeight(); this.U = mboxScreenWidth(); this.V = mboxBrowserWidth(); this.W = mboxBrowserHeight(); this.X = mboxScreenColorDepth(); this.Y = mboxBrowserTimeOffset(); this.Z = new mboxSession(this.S, 'mboxSession', 'session', 31 * 60, this.Q); this._ = new mboxPC('PC', 7776000, this.Q); this.C = new mboxUrlBuilder(J, i); this.ab(this.C, P); this.bb = new Date().getTime(); this.cb = this.bb; var db = this; this.addOnLoad(function() { db.cb = new Date().getTime(); }); if (this.N) { this.addOnLoad(function() { db.L = true; db.getMboxes().each(function(eb) { eb.fb(); eb.setFetcher(new mboxAjaxFetcher()); eb.finalize(); }); TNT.a.nestedMboxes = []; }); if (this.O) { this.limitTraffic(100, 10368000); this.gb(); this.hb = new mboxSignaler(function(ib, j) { return db.create(ib, j); }, this.Q); } }};mboxFactory.prototype.isEnabled = function() { return this.O;};mboxFactory.prototype.getDisableReason = function() { return this.Q.getCookie('disable');};mboxFactory.prototype.isSupported = function() { return this.N;};mboxFactory.prototype.disable = function(jb, kb) { if (typeof jb == 'undefined') { jb = 60 * 60; } if (typeof kb == 'undefined') { kb = 'unspecified'; } if (!this.isAdmin()) { this.O = false; this.Q.setCookie('disable', kb, jb); }};mboxFactory.prototype.enable = function() { this.O = true; this.Q.deleteCookie('disable');};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf('mboxEnv') != -1;};mboxFactory.prototype.limitTraffic = function(lb, jb) {};mboxFactory.prototype.addOnLoad = function(mb) { if (this.isDomLoaded()) { mb(); } else { var nb = false; var ob = function() { if (nb) { return; } nb = true; mb(); }; this.pb.push(ob); if (this.isDomLoaded() && !nb) { ob(); } }};mboxFactory.prototype.getEllapsedTime = function() { return this.cb - this.bb;};mboxFactory.prototype.getEllapsedTimeUntil = function(qb) { return qb - this.bb;};mboxFactory.prototype.getMboxes = function() { return this.M;};mboxFactory.prototype.get = function(ib, rb) { return this.M.get(ib).getById(rb || 0);};mboxFactory.prototype.update = function(ib, j) { if (!this.isEnabled()) { return; } if (!this.isDomLoaded()) { var db = this; this.addOnLoad(function() { db.update(ib, j); }); return; } if (this.M.get(ib).length() == 0) { throw "Mbox " + ib + " is not defined"; } this.M.get(ib).each(function(eb) { eb.getUrlBuilder().addParameter('mboxPage', mboxGenerateId()); mboxFactoryDefault.setVisitorIdParameters(eb.getUrlBuilder(), ib); eb.load(j); });};mboxFactory.prototype.setVisitorIdParameters = function(l, ib) { var imsOrgId = '8DD367C25245AFCC0A490D4C@AdobeOrg'; if (typeof Visitor == 'undefined' || imsOrgId.length == 0) { return; } var visitor = Visitor.getInstance(imsOrgId); if (visitor.isAllowed()) { var addVisitorValueToUrl = function(param, getter, mboxName) { if (visitor[getter]) { var callback = function(value) { if (value) { l.addParameter(param, value); } }; var value; if (typeof mboxName != 'undefined') { value = visitor[getter]("mbox:" + mboxName); } else { value = visitor[getter](callback); } callback(value); } }; addVisitorValueToUrl('mboxMCGVID', "getMarketingCloudVisitorID"); addVisitorValueToUrl('mboxMCGLH', "getAudienceManagerLocationHint"); addVisitorValueToUrl('mboxAAMB', "getAudienceManagerBlob"); addVisitorValueToUrl('mboxMCAVID', "getAnalyticsVisitorID"); addVisitorValueToUrl('mboxMCSDID', "getSupplementalDataID", ib); }};mboxFactory.prototype.create = function( ib, j, sb) { if (!this.isSupported()) { return null; } var l = this.C.clone(); l.addParameter('mboxCount', this.M.length() + 1); l.addParameters(j); this.setVisitorIdParameters(l, ib); var rb = this.M.get(ib).length(); var tb = this.K + '-' + ib + '-' + rb; var ub; if (sb) { ub = new mboxLocatorNode(sb); } else { if (this.L) { throw 'The page has already been loaded, can\'t write marker'; } ub = new mboxLocatorDefault(tb); } try { var db = this; var vb = 'mboxImported-' + tb; var eb = new mbox(ib, rb, l, ub, vb); if (this.O) { eb.setFetcher( this.L ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } eb.setOnError(function(wb, s) { eb.setMessage(wb); eb.activate(); if (!eb.isActivated()) { db.disable(60 * 60, wb); window.location.reload(false); } }); this.M.add(eb); } catch (xb) { this.disable(); throw 'Failed creating mbox "' + ib + '", the error was: ' + xb; } var yb = new Date(); l.addParameter('mboxTime', yb.getTime() - (yb.getTimezoneOffset() * 60000)); return eb;};mboxFactory.prototype.getCookieManager = function() { return this.Q;};mboxFactory.prototype.getPageId = function() { return this.S;};mboxFactory.prototype.getPCId = function() { return this._;};mboxFactory.prototype.getSessionId = function() { return this.Z;};mboxFactory.prototype.getSignaler = function() { return this.hb;};mboxFactory.prototype.getUrlBuilder = function() { return this.C;};mboxFactory.prototype.ab = function(l, P) { l.addParameter('mboxHost', document.location.hostname) .addParameter('mboxSession', this.Z.getId()); if (!P) { l.addParameter('mboxFactoryId', this.K); } if (this._.getId() != null) { l.addParameter('mboxPC', this._.getId()); } l.addParameter('mboxPage', this.S); l.addParameter('screenHeight', this.T); l.addParameter('screenWidth', this.U); l.addParameter('browserWidth', this.V); l.addParameter('browserHeight', this.W); l.addParameter('browserTimeOffset', this.Y); l.addParameter('colorDepth', this.X); l.addParameters(this.zb().split('&')); l.setUrlProcessAction(function(l) { l += '&mboxURL=' + encodeURIComponent(document.location); var Ab = encodeURIComponent(document.referrer); if (l.length + Ab.length < 2000) { l += '&mboxReferrer=' + Ab; } l += '&mboxVersion=' + mboxVersion; return l; });};mboxFactory.prototype.zb = function() { return "host="+window.location.hostname.substr(0,15)+"&x=ver&"+"path="+location.pathname;};mboxFactory.prototype.gb = function() { document.write('<style>.' + 'mboxDefault' + ' { visibility:hidden; }</style>');};mboxFactory.prototype.isDomLoaded = function() { return this.L;};mboxFactory.prototype.R = function() { if (this.pb != null) { return; } this.pb = new Array(); var db = this; (function() { var Bb = document.addEventListener ? "DOMContentLoaded" : "onreadystatechange"; var Cb = false; var Db = function() { if (Cb) { return; } Cb = true; for (var i = 0; i < db.pb.length; ++i) { db.pb[i](); } }; if (document.addEventListener) { document.addEventListener(Bb, function() { document.removeEventListener(Bb, arguments.callee, false); Db(); }, false); window.addEventListener("load", function(){ document.removeEventListener("load", arguments.callee, false); Db(); }, false); } else if (document.attachEvent) { if (self !== self.top) { document.attachEvent(Bb, function() { if (document.readyState === 'complete') { document.detachEvent(Bb, arguments.callee); Db(); } }); } else { var Eb = function() { try { document.documentElement.doScroll('left'); Db(); } catch (Fb) { setTimeout(Eb, 13); } }; Eb(); } } if (document.readyState === "complete") { Db(); } })();};mboxSignaler = function(Gb, Q) { this.Q = Q; var Hb = Q.getCookieNames('signal-'); for (var p = 0; p < Hb.length; p++) { var Ib = Hb[p]; var Jb = Q.getCookie(Ib).split('&'); var eb = Gb(Jb[0], Jb); eb.load(); Q.deleteCookie(Ib); }};mboxSignaler.prototype.signal = function(Kb, ib ) { this.Q.setCookie('signal-' + Kb, mboxShiftArray(arguments).join('&'), 45 * 60);};mboxList = function() { this.M = new Array();};mboxList.prototype.add = function(eb) { if (eb != null) { this.M[this.M.length] = eb; }};mboxList.prototype.get = function(ib) { var I = new mboxList(); for (var p = 0; p < this.M.length; p++) { var eb = this.M[p]; if (eb.getName() == ib) { I.add(eb); } } return I;};mboxList.prototype.getById = function(Lb) { return this.M[Lb];};mboxList.prototype.length = function() { return this.M.length;};mboxList.prototype.each = function(u) { if (typeof u !== 'function') { throw 'Action must be a function, was: ' + typeof(u); } for (var p = 0; p < this.M.length; p++) { u(this.M[p]); }};mboxLocatorDefault = function(n) { this.n = 'mboxMarker-' + n; document.write('<div id="' + this.n + '" style="visibility:hidden;display:none">&nbsp;</div>');};mboxLocatorDefault.prototype.locate = function() { var Mb = document.getElementById(this.n); while (Mb != null) { if (Mb.nodeType == 1) { if (Mb.className == 'mboxDefault') { return Mb; } } Mb = Mb.previousSibling; } return null;};mboxLocatorDefault.prototype.force = function() { var Nb = document.createElement('div'); Nb.className = 'mboxDefault'; var Ob = document.getElementById(this.n); if (Ob) { Ob.parentNode.insertBefore(Nb, Ob); } return Nb;};mboxLocatorNode = function(Pb) { this.Mb = Pb;};mboxLocatorNode.prototype.locate = function() { return typeof this.Mb == 'string' ? document.getElementById(this.Mb) : this.Mb;};mboxLocatorNode.prototype.force = function() { return null;};mboxCreate = function(ib ) { var eb = mboxFactoryDefault.create( ib, mboxShiftArray(arguments)); if (eb) { eb.load(); } return eb;};mboxDefine = function(sb, ib ) { var eb = mboxFactoryDefault.create(ib, mboxShiftArray(mboxShiftArray(arguments)), sb); return eb;};mboxUpdate = function(ib ) { mboxFactoryDefault.update(ib, mboxShiftArray(arguments));};mbox = function(n, Qb, C, Rb, vb) { this.Sb = null; this.Tb = 0; this.ub = Rb; this.vb = vb; this.Ub = null; this.Vb = new mboxOfferContent(); this.Nb = null; this.C = C; this.message = ''; this.Wb = new Object(); this.Xb = 0; this.Qb = Qb; this.n = n; this.Yb(); C.addParameter('mbox', n) .addParameter('mboxId', Qb); this.Zb = function() {}; this._b = function() {}; this.ac = null; this.bc = document.documentMode >= 10 && !mboxFactoryDefault.isDomLoaded(); if (this.bc) { this.cc = TNT.a.nestedMboxes; this.cc.push(this.n); }};mbox.prototype.getId = function() { return this.Qb;};mbox.prototype.Yb = function() { if (this.n.length > 250) { throw "Mbox Name " + this.n + " exceeds max length of " + "250 characters."; } else if (this.n.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.n + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.n;};mbox.prototype.getParameters = function() { var j = this.C.getParameters(); var I = new Array(); for (var p = 0; p < j.length; p++) { if (j[p].name.indexOf('mbox') != 0) { I[I.length] = j[p].name + '=' + j[p].value; } } return I;};mbox.prototype.setOnLoad = function(u) { this._b = u; return this;};mbox.prototype.setMessage = function(wb) { this.message = wb; return this;};mbox.prototype.setOnError = function(Zb) { this.Zb = Zb; return this;};mbox.prototype.setFetcher = function(dc) { if (this.Ub) { this.Ub.cancel(); } this.Ub = dc; return this;};mbox.prototype.getFetcher = function() { return this.Ub;};mbox.prototype.load = function(j) { if (this.Ub == null) { return this; } this.setEventTime("load.start"); this.cancelTimeout(); this.Tb = 0; var C = (j && j.length > 0) ? this.C.clone().addParameters(j) : this.C; this.Ub.fetch(C); var db = this; this.ec = setTimeout(function() { db.Zb('browser timeout', db.Ub.getType()); }, 15000); this.setEventTime("load.end"); return this;};mbox.prototype.loaded = function() { this.cancelTimeout(); if (!this.activate()) { var db = this; setTimeout(function() { db.loaded(); }, 100); }};mbox.prototype.activate = function() { if (this.Tb) { return this.Tb; } this.setEventTime('activate' + ++this.Xb + '.start'); if (this.bc && this.cc[this.cc.length - 1] !== this.n) { return this.Tb; } if (this.show()) { this.cancelTimeout(); this.Tb = 1; } this.setEventTime('activate' + this.Xb + '.end'); if (this.bc) { this.cc.pop(); } return this.Tb;};mbox.prototype.isActivated = function() { return this.Tb;};mbox.prototype.setOffer = function(Vb) { if (Vb && Vb.show && Vb.setOnLoad) { this.Vb = Vb; } else { throw 'Invalid offer'; } return this;};mbox.prototype.getOffer = function() { return this.Vb;};mbox.prototype.show = function() { this.setEventTime('show.start'); var I = this.Vb.show(this); this.setEventTime(I == 1 ? "show.end.ok" : "show.end"); return I;};mbox.prototype.showContent = function(fc) { if (fc == null) { return 0; } if (this.Nb == null || !this.Nb.parentNode) { this.Nb = this.getDefaultDiv(); if (this.Nb == null) { return 0; } } if (this.Nb != fc) { this.gc(this.Nb); this.Nb.parentNode.replaceChild(fc, this.Nb); this.Nb = fc; } this.hc(fc); this._b(); return 1;};mbox.prototype.hide = function() { this.setEventTime('hide.start'); var I = this.showContent(this.getDefaultDiv()); this.setEventTime(I == 1 ? 'hide.end.ok' : 'hide.end.fail'); return I;};mbox.prototype.finalize = function() { this.setEventTime('finalize.start'); this.cancelTimeout(); if (this.getDefaultDiv() == null) { if (this.ub.force() != null) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok');};mbox.prototype.cancelTimeout = function() { if (this.ec) { clearTimeout(this.ec); } if (this.Ub != null) { this.Ub.cancel(); }};mbox.prototype.getDiv = function() { return this.Nb;};mbox.prototype.getDefaultDiv = function() { if (this.ac == null) { this.ac = this.ub.locate(); } return this.ac;};mbox.prototype.setEventTime = function(ic) { this.Wb[ic] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.Wb;};mbox.prototype.getImportName = function() { return this.vb;};mbox.prototype.getURL = function() { return this.C.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.C;};mbox.prototype.jc = function(Nb) { return Nb.style.display != 'none';};mbox.prototype.hc = function(Nb) { this.kc(Nb, true);};mbox.prototype.gc = function(Nb) { this.kc(Nb, false);};mbox.prototype.kc = function(Nb, lc) { Nb.style.visibility = lc ? "visible" : "hidden"; Nb.style.display = lc ? "block" : "none";};mbox.prototype.fb = function() { this.bc = false;};mboxOfferContent = function() { this._b = function() {};};mboxOfferContent.prototype.show = function(eb) { var I = eb.showContent(document.getElementById(eb.getImportName())); if (I == 1) { this._b(); } return I;};mboxOfferContent.prototype.setOnLoad = function(_b) { this._b = _b;};mboxOfferAjax = function(fc) { this.fc = fc; this._b = function() {};};mboxOfferAjax.prototype.setOnLoad = function(_b) { this._b = _b;};mboxOfferAjax.prototype.show = function(eb) { var mc = document.createElement('div'); mc.id = eb.getImportName(); mc.innerHTML = this.fc; var I = eb.showContent(mc); if (I == 1) { this._b(); } return I;};mboxOfferDefault = function() { this._b = function() {};};mboxOfferDefault.prototype.setOnLoad = function(_b) { this._b = _b;};mboxOfferDefault.prototype.show = function(eb) { var I = eb.hide(); if (I == 1) { this._b(); } return I;};mboxCookieManager = function mboxCookieManager(n, nc) { this.n = n; this.nc = nc == '' || nc.indexOf('.') == -1 ? '' : '; domain=' + nc; this.oc = new mboxMap(); this.loadCookies();};mboxCookieManager.prototype.isEnabled = function() { this.setCookie('check', 'true', 60); this.loadCookies(); return this.getCookie('check') == 'true';};mboxCookieManager.prototype.setCookie = function(n, o, jb) { if (typeof n != 'undefined' && typeof o != 'undefined' && typeof jb != 'undefined') { var pc = new Object(); pc.name = n; pc.value = escape(o); pc.expireOn = Math.ceil(jb + new Date().getTime() / 1000); this.oc.put(n, pc); this.saveCookies(); }};mboxCookieManager.prototype.getCookie = function(n) { var pc = this.oc.get(n); return pc ? unescape(pc.value) : null;};mboxCookieManager.prototype.deleteCookie = function(n) { this.oc.remove(n); this.saveCookies();};mboxCookieManager.prototype.getCookieNames = function(qc) { var rc = new Array(); this.oc.each(function(n, pc) { if (n.indexOf(qc) == 0) { rc[rc.length] = n; } }); return rc;};mboxCookieManager.prototype.saveCookies = function() { var sc = false; var tc = 'disable'; var uc = new Array(); var vc = 0; this.oc.each(function(n, pc) { if(!sc || n === tc) { uc[uc.length] = n + '#' + pc.value + '#' + pc.expireOn; if (vc < pc.expireOn) { vc = pc.expireOn; } } }); var wc = new Date(vc * 1000); document.cookie = this.n + '=' + uc.join('|') + '; expires=' + wc.toGMTString() + '; path=/' + this.nc;};mboxCookieManager.prototype.loadCookies = function() { this.oc = new mboxMap(); var xc = document.cookie.indexOf(this.n + '='); if (xc != -1) { var yc = document.cookie.indexOf(';', xc); if (yc == -1) { yc = document.cookie.indexOf(',', xc); if (yc == -1) { yc = document.cookie.length; } } var zc = document.cookie.substring( xc + this.n.length + 1, yc).split('|'); var Ac = Math.ceil(new Date().getTime() / 1000); for (var p = 0; p < zc.length; p++) { var pc = zc[p].split('#'); if (Ac <= pc[2]) { var Bc = new Object(); Bc.name = pc[0]; Bc.value = pc[1]; Bc.expireOn = pc[2]; this.oc.put(Bc.name, Bc); } } }};mboxSession = function(Cc, Dc, Ib, Ec, Q) { this.Dc = Dc; this.Ib = Ib; this.Ec = Ec; this.Q = Q; this.Fc = false; this.Qb = typeof mboxForceSessionId != 'undefined' ? mboxForceSessionId : mboxGetPageParameter(this.Dc); if (this.Qb == null || this.Qb.length == 0) { this.Qb = Q.getCookie(Ib); if (this.Qb == null || this.Qb.length == 0) { this.Qb = Cc; this.Fc = true; } } Q.setCookie(Ib, this.Qb, Ec);};mboxSession.prototype.getId = function() { return this.Qb;};mboxSession.prototype.forceId = function(Gc) { this.Qb = Gc; this.Q.setCookie(this.Ib, this.Qb, this.Ec);};mboxPC = function(Ib, Ec, Q) { this.Ib = Ib; this.Ec = Ec; this.Q = Q; this.Qb = typeof mboxForcePCId != 'undefined' ? mboxForcePCId : Q.getCookie(Ib); if (this.Qb != null) { Q.setCookie(Ib, this.Qb, Ec); }};mboxPC.prototype.getId = function() { return this.Qb;};mboxPC.prototype.forceId = function(Gc) { if (this.Qb != Gc) { this.Qb = Gc; this.Q.setCookie(this.Ib, this.Qb, this.Ec); return true; } return false;};mboxGetPageParameter = function(n) { var I = null; var Hc = new RegExp("\\?[^#]*" + n + "=([^\&;#]*)"); var Ic = Hc.exec(document.location); if (Ic != null && Ic.length >= 2) { I = Ic[1]; } return I;};mboxSetCookie = function(n, o, jb) { return mboxFactoryDefault.getCookieManager().setCookie(n, o, jb);};mboxGetCookie = function(n) { return mboxFactoryDefault.getCookieManager().getCookie(n);};mboxCookiePageDomain = function() { var nc = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var Jc = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!Jc.exec(nc)) { var Kc = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(nc); if (Kc) { nc = Kc[0]; if (nc.indexOf("www.") == 0) { nc=nc.substr(4); } } } return nc ? nc: "";};mboxShiftArray = function(Lc) { var I = new Array(); for (var p = 1; p < Lc.length; p++) { I[I.length] = Lc[p]; } return I;};mboxGenerateId = function() { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999);};mboxScreenHeight = function() { return screen.height;};mboxScreenWidth = function() { return screen.width;};mboxBrowserWidth = function() { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth;};mboxBrowserHeight = function() { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight;};mboxBrowserTimeOffset = function() { return -new Date().getTimezoneOffset();};mboxScreenColorDepth = function() { return screen.pixelDepth;};if (typeof mboxVersion == 'undefined') { var mboxVersion = 51; var mboxFactories = new mboxMap(); var mboxFactoryDefault = new mboxFactory('norwegiancruiselines.tt.omtrdc.net', 'norwegiancruiselines', 'default');};if (mboxGetPageParameter("mboxDebug") != null || mboxFactoryDefault.getCookieManager() .getCookie("debug") != null) { setTimeout(function() { if (typeof mboxDebugLoaded == 'undefined') { alert('Could not load the remote debug.\nPlease check your connection' + ' to Test&amp;Target servers'); } }, 60*60); document.write('<' + 'scr' + 'ipt language="Javascript1.2" src=' + '"//admin6.testandtarget.omniture.com/admin/mbox/mbox_debug.jsp?mboxServerHost=norwegiancruiselines.tt.omtrdc.net' + '&clientCode=norwegiancruiselines"><' + '\/scr' + 'ipt>');};mboxScPluginFetcher = function(i, Mc) { this.i = i; this.Mc = Mc;};mboxScPluginFetcher.prototype.Nc = function(C) { C.setBasePath('/m2/' + this.i + '/sc/standard'); this.Oc(C); var l = C.buildUrl(); l += '&scPluginVersion=1'; return l;};mboxScPluginFetcher.prototype.Oc = function(C) { var Pc = [ "dynamicVariablePrefix","visitorID","vmk","ppu","charSet", "visitorNamespace","cookieDomainPeriods","cookieLifetime","pageName", "currencyCode","variableProvider","channel","server", "pageType","transactionID","purchaseID","campaign","state","zip","events", "products","linkName","linkType","resolution","colorDepth", "javascriptVersion","javaEnabled","cookiesEnabled","browserWidth", "browserHeight","connectionType","homepage","pe","pev1","pev2","pev3", "visitorSampling","visitorSamplingGroup","dynamicAccountSelection", "dynamicAccountList","dynamicAccountMatch","trackDownloadLinks", "trackExternalLinks","trackInlineStats","linkLeaveQueryString", "linkDownloadFileTypes","linkExternalFilters","linkInternalFilters", "linkTrackVars","linkTrackEvents","linkNames","lnk","eo" ]; for (var p = 0; p < Pc.length; p++) { this.Qc(Pc[p], C); } for (var p = 1; p <= 75; p++) { this.Qc('prop' + p, C); this.Qc('eVar' + p, C); this.Qc('hier' + p, C); }};mboxScPluginFetcher.prototype.Qc = function(n, C) { var o = this.Mc[n]; if (typeof(o) === 'undefined' || o === null || o === '') { return; } C.addParameter(n, o);};mboxScPluginFetcher.prototype.cancel = function() { };mboxScPluginFetcher.prototype.fetch = function(C) { C.setServerType(this.getType()); var l = this.Nc(C); this.D = document.createElement('script'); this.D.src = l; document.body.appendChild(this.D);};mboxScPluginFetcher.prototype.getType = function() { return 'ajax';};function mboxLoadSCPlugin(Mc) { if (!Mc) { return null; } Mc.m_tt = function(Mc) { var Rc = Mc.m_i('tt'); Rc.O = true; Rc.i = 'norwegiancruiselines'; Rc['_t'] = function() { if (!this.isEnabled()) { return; } var eb = this.Tc(); if (eb) { var dc = new mboxScPluginFetcher(this.i, this.s); eb.setFetcher(dc); eb.load(); } }; Rc.isEnabled = function() { return this.O && mboxFactoryDefault.isEnabled(); }; Rc.Tc = function() { var ib = this.Uc(); var Nb = document.createElement('DIV'); return mboxFactoryDefault.create(ib, new Array(), Nb); }; Rc.Uc = function() { var Vc = this.s.events && this.s.events.indexOf('purchase') != -1; return 'SiteCatalyst: ' + (Vc ? 'purchase' : 'event'); }; }; return Mc.loadModule('tt');};mboxVizTargetUrl = function(ib ) { if (!mboxFactoryDefault.isEnabled()) { return; } var C = mboxFactoryDefault.getUrlBuilder().clone(); C.setBasePath('/m2/' + 'norwegiancruiselines' + '/viztarget'); C.addParameter('mbox', ib); C.addParameter('mboxId', 0); C.addParameter('mboxCount', mboxFactoryDefault.getMboxes().length() + 1); var yb = new Date(); C.addParameter('mboxTime', yb.getTime() - (yb.getTimezoneOffset() * 60000)); C.addParameter('mboxPage', mboxGenerateId()); var j = mboxShiftArray(arguments); if (j && j.length > 0) { C.addParameters(j); } C.addParameter('mboxDOMLoaded', mboxFactoryDefault.isDomLoaded()); mboxFactoryDefault.setVisitorIdParameters(C, ib); return C.buildUrl();};TNT.createGlobalMbox = function () { var Wc = "target-global-mbox"; var Xc = ("".length === 0); var Yc = ""; var Zc; if (Xc) { Yc = "mbox-" + Wc + "-" + mboxGenerateId(); Zc = document.createElement("div"); Zc.className = "mboxDefault"; Zc.id = Yc; Zc.style.visibility = "hidden"; Zc.style.display = "none"; mboxFactoryDefault.addOnLoad(function(){ document.body.insertBefore(Zc, document.body.firstChild); }); } var _c = mboxFactoryDefault.create(Wc, TNT.a.b(), Yc); if (_c != null) { _c.load(); }}; document.write('<script src="' + document.location.protocol + '//cdn.tt.omtrdc.net/cdn/target.js"></script>'); TNT.createGlobalMbox();